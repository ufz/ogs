version: 6.0.8.{build}
clone_depth: 100

image:
  - Visual Studio 2017

environment:
  PYTHON: "C:\\Python27-x64"
  PYTHON_VERSION: "2.7.11"
  PYTHON_ARCH: "64"
  CONAN_USER_HOME: "C:\\projects\\deps\\conan"
  OMP_NUM_THREADS: "1"

platform:
  - x64

configuration:
  - Release

cache:
  - C:\projects\deps\conan -> scripts/cmake/ConanSetup.cmake

install:
  # All external dependencies are installed in C:\projects\deps
  - if not exist "C:\projects\deps\" mkdir C:\projects\deps

  # Install conan
  - if not exist "C:\projects\deps\conan\" mkdir C:\projects\deps\conan
  - set PATH=%PYTHON%/Scripts/;%PATH%
  - pip.exe install conan --upgrade

  # Install Ninja
  - set NINJA_URL="https://github.com/ninja-build/ninja/releases/download/v1.7.2/ninja-win.zip"
  - appveyor DownloadFile %NINJA_URL% -FileName ninja.zip
  - 7z x ninja.zip -oC:\projects\deps\ninja > nul
  - set PATH=C:\projects\deps\ninja;%PATH%
  - ninja --version

clone_script:
  - ps: >-
      if(-not $env:appveyor_pull_request_number) {
        $env:GIT_LFS_SKIP_SMUDGE = 1
        git clone -q --branch=$env:appveyor_repo_branch https://github.com/$env:appveyor_repo_name $env:appveyor_build_folder
        git checkout -qf $env:appveyor_repo_commit
        git lfs pull
      } else {
        $env:GIT_LFS_SKIP_SMUDGE = 1
        git clone -q https://github.com/$env:appveyor_repo_name $env:appveyor_build_folder
        git fetch -q origin +refs/pull/$env:appveyor_pull_request_number/merge:
        git checkout -qf FETCH_HEAD
        git lfs pull
      }

before_build:
  - call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\Tools\vsdevcmd" -arch=x64
  - cd %APPVEYOR_BUILD_FOLDER%
  - echo %APPVEYOR_BUILD_FOLDER%

build_script:
  - mkdir build & cd build
  - cmake .. -G "Ninja" -DCMAKE_BUILD_TYPE=%configuration% -DBUILD_SHARED_LIBS=OFF -DOGS_EIGEN_DYNAMIC_SHAPE_MATRICES=ON -DOGS_USE_PCH=OFF -DOGS_USE_CONAN=ON -DOGS_CONAN_BUILD=never # -DOGS_BUILD_GUI=ON
  - cmake --build . --config %configuration%
  - cmake --build . --config %configuration% --target tests
  - cmake --build . --config %configuration% --target ctest
  # - cmake . -DOGS_BUILD_GUI=ON
  # - cmake --build . --config %configuration% --target DataExplorer

