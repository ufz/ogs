
INCLUDE_DIRECTORIES(
	${CMAKE_SOURCE_DIR}/Utils/FileConverter
	${CMAKE_SOURCE_DIR}/BaseLib
	${CMAKE_SOURCE_DIR}/GeoLib
	${CMAKE_SOURCE_DIR}/FileIO
	${CMAKE_SOURCE_DIR}/MathLib
	${CMAKE_SOURCE_DIR}/FemLib
	${CMAKE_SOURCE_DIR}/MeshLib
	${CMAKE_SOURCE_DIR}/Gui/OpenSG
)

## Shape to GLI file converter ##
IF (Shapelib_FOUND)

	INCLUDE_DIRECTORIES (${Shapelib_INCLUDE_DIR})

	# Create executables
	ADD_EXECUTABLE( ConvertSHPToGLI ConvertSHPToGLI.cpp )
  SET_TARGET_PROPERTIES(ConvertSHPToGLI PROPERTIES FOLDER Utilities)

	TARGET_LINK_LIBRARIES( ConvertSHPToGLI
		FEM
    MSH
    MSHGEOTOOLS
    FileIO
    GEO
    MathLib
    Base
    OGSProject
		${Shapelib_LIBRARIES}
		${QT_LIBRARIES}
	)

	IF (OGS_PACKAGING)
		INSTALL ( TARGETS ConvertSHPToGLI RUNTIME DESTINATION bin COMPONENT ConvertSHPToGLI )
	ENDIF (OGS_PACKAGING)

ENDIF (Shapelib_FOUND)

## VTK to OpenSG file converter ##
IF (OGS_USE_OPENSG AND VTK_FOUND AND Boost_FOUND)

	INCLUDE( ${VTK_USE_FILE} )

	ADD_EXECUTABLE (ConvertVtkToOsg ConvertVtkToOsg.cpp)
	SET_TARGET_PROPERTIES(ConvertVtkToOsg PROPERTIES FOLDER Utilities)

	USE_OPENSG ( ConvertVtkToOsg )
	INCLUDE_DIRECTORIES ( ${CMAKE_SOURCE_DIR}/Gui/OpenSG ${Boost_INCLUDE_DIRS} )
	TARGET_LINK_LIBRARIES ( ConvertVtkToOsg OgsOpenSG vtkRendering vtkIO ${Boost_LIBRARIES} )

	IF (OGS_PACKAGING)
		INSTALL ( TARGETS ConvertVtkToOsg RUNTIME DESTINATION bin COMPONENT ConvertVtkToOsg )
	ENDIF (OGS_PACKAGING)

ENDIF () # OGS_USE_OPENSG AND VTK_FOUND AND Boost_FOUND

## Gli to VTK file converter ##
IF(VTK_FOUND AND Boost_FOUND)

	INCLUDE( ${VTK_USE_FILE} )

	ADD_EXECUTABLE (ConvertGliToVtk ConvertGliToVtk.cpp)
	SET_TARGET_PROPERTIES(ConvertGliToVtk PROPERTIES FOLDER Utilities)

	INCLUDE_DIRECTORIES ( ${Boost_INCLUDE_DIRS} ${CMAKE_SOURCE_DIR}/Gui/VtkVis )
	TARGET_LINK_LIBRARIES ( ConvertGliToVtk FileIO VtkVis vtkRendering vtkIO
boost_filesystem-mt boost_system-mt boost_regex-mt)

	IF (OGS_PACKAGING)
		INSTALL ( TARGETS ConvertGliToVtk RUNTIME DESTINATION bin COMPONENT ConvertGliToVtk )
	ENDIF (OGS_PACKAGING)

ENDIF() # VTK_FOUND AND Boost_FOUND

IF (QT4_FOUND)
	ADD_EXECUTABLE (generateBCandGLI generateBCandGLI.cpp )
	TARGET_LINK_LIBRARIES (generateBCandGLI
		FEM
		MSH
		MSHGEOTOOLS
		FileIO
		GEO
		MathLib
		Base
		OGSProject
		${QT_LIBRARIES}
	)

	ADD_EXECUTABLE (generateBCFromPolyline generateBCFromPolyline.cpp )
	TARGET_LINK_LIBRARIES (generateBCFromPolyline
		FEM
		MSH
		MSHGEOTOOLS
		FileIO
		GEO
		MathLib
		Base
		OGSProject
		${QT_LIBRARIES}
	)

	ADD_EXECUTABLE (generateMatPropsFromMatID generateMatPropsFromMatID.cpp )
	TARGET_LINK_LIBRARIES (generateMatPropsFromMatID
		FEM
		MSH
		FileIO
		Base
		OGSProject
		${QT_LIBRARIES}
	)

  SET_TARGET_PROPERTIES(generateBCandGLI generateBCFromPolyline generateMatPropsFromMatID
    PROPERTIES FOLDER Utilities)

ENDIF () # QT4_FOUND

ADD_EXECUTABLE (GMSH2OGS GMSH2OGS.cpp)
SET_TARGET_PROPERTIES(GMSH2OGS PROPERTIES FOLDER Utilities)
TARGET_LINK_LIBRARIES (GMSH2OGS
	MSH
	FileIO
)
