#Source files grouped by a directory
GET_SOURCE_FILES(SOURCES_MATHLIB)
SET ( SOURCES ${SOURCES_MATHLIB})

GET_SOURCE_FILES(SOURCES_INTERPOLATIONALGORITHMS InterpolationAlgorithms)
SET ( SOURCES ${SOURCES} ${SOURCES_INTERPOLATIONALGORITHMS})

GET_SOURCE_FILES(SOURCES_LINALG LinAlg)
SET ( SOURCES ${SOURCES} ${SOURCES_LINALG})

GET_SOURCE_FILES(SOURCES_LINALG_DENSE LinAlg/Dense)
SET ( SOURCES ${SOURCES} ${SOURCES_LINALG_DENSE})

GET_SOURCE_FILES(SOURCES_LINALG_SPARSE LinAlg/Sparse)
SET ( SOURCES ${SOURCES} ${SOURCES_LINALG_SPARSE})

GET_SOURCE_FILES(SOURCES_LINALG_SOLVERS LinAlg/Solvers)
SET ( SOURCES ${SOURCES} ${SOURCES_LINALG_SOLVERS})

GET_SOURCE_FILES(SOURCES_LINALG_PRECOND LinAlg/Preconditioner)
SET ( SOURCES ${SOURCES} ${SOURCES_LINALG_PRECOND})

GET_SOURCE_FILES(SOURCES_LINALG_LEQS LinAlg/SystemOfLinearEquations)
IF (NOT OGS_USE_LIS)
    LIST(REMOVE_ITEM SOURCES_LINALG_LEQS 
        LinAlg/SystemOfLinearEquations/LisOption.h
        LinAlg/SystemOfLinearEquations/LisOption.cpp
        LinAlg/SystemOfLinearEquations/LisLinearSystem.h
        LinAlg/SystemOfLinearEquations/LisLinearSystem.cpp
    )
ENDIF ()
SET ( SOURCES ${SOURCES} ${SOURCES_LINALG_LEQS})

IF (METIS_FOUND)
	GET_SOURCE_FILES(SOURCES_LINALG_SPARSE_NESTEDDISSECTION LinAlg/Sparse/NestedDissectionPermutation)
	SET ( SOURCES ${SOURCES} ${SOURCES_LINALG_SPARSE_NESTEDDISSECTION})
ENDIF ()

INCLUDE_DIRECTORIES (
	.
	../BaseLib
	../GeoLib
)

IF(METIS_FOUND)
	INCLUDE_DIRECTORIES (
		${METIS_INCLUDE_DIR}
	)
ENDIF()

IF (LIS_FOUND)
    INCLUDE_DIRECTORIES(${LIS_INCLUDE_DIR})
ENDIF()


# Create the library
ADD_LIBRARY( MathLib STATIC ${SOURCES} )

SET_TARGET_PROPERTIES(MathLib PROPERTIES LINKER_LANGUAGE CXX)

IF (LAPACK_FOUND)
    TARGET_LINK_LIBRARIES ( MathLib ${BLAS_LIBRARIES} ${LAPACK_LIBRARIES})
ENDIF()

IF (LIS_FOUND)
    TARGET_LINK_LIBRARIES( MathLib ${LIS_LIBRARIES} )
ENDIF()

