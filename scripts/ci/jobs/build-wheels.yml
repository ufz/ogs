stages:
  - build
  - release
  - test

workflow:
  rules:
    - if: $CI_COMMIT_TAG
      variables:
        PYPI_REPO: --repository pypi
        PYPI_USER: __token__
        PYPI_PW: "${PYPI_TOKEN}"
        GIT_DEPTH: 1000
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      variables:
        PYPI_REPO: --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi
        PYPI_USER: gitlab-ci-token
        PYPI_PW: "${CI_JOB_TOKEN}"
        SETUPTOOLS_SCM_LOCAL_SCHEME: no-local-version
        GIT_DEPTH: 1000
    - if: $CI_MERGE_REQUEST_ID
      variables:
        CIBW_BUILD: cp310*
        GIT_DEPTH: 1000

include:
  - local: "scripts/ci/extends/*.yml"
  - local: "scripts/ci/jobs/jupyter.yml"

.wheels_template: &wheels_template
  stage: build
  script:
    - pipx run cibuildwheel
  rules:
    - if: $CI_MERGE_REQUEST_LABELS =~ /.*ci::wheels only.*/
      variables:
        CIBW_BUILD: cp310*
        GIT_DEPTH: 1000
    - when: on_success
  artifacts:
    paths:
      - wheelhouse/

build wheels linux:
  tags: [envinf3-shell]
  variables:
    CPM_SOURCE_CACHE: /host/cibuildwheel_cache/cpm
    CCACHE_DIR: /host/cibuildwheel_cache/ccache
    CCACHE_MAXSIZE: 15G
  <<: *wheels_template

build wheels mac:
  tags:
    - mac
    - ${ARCHITECTURE}
  variables:
    CMAKE_OSX_DEPLOYMENT_TARGET: "10.15"
  parallel:
    matrix:
      - ARCHITECTURE: ["amd64", "arm64"]
  <<: *wheels_template

build wheels win:
  tags: [windows]
  extends:
    - .vs2019-environment
  variables:
    SKBUILD_BUILD_OPTIONS: "/m" # TODO not supported yet in scikit-build-core
  <<: *wheels_template

publish wheels:
  stage: release
  needs: ["build wheels linux", "build wheels mac", "build wheels win"]
  tags: [envinf, shell]
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
    - when: never
  script:
    - pipx run build --sdist --outdir wheelhouse
    - >
      pipx run twine upload
      ${PYPI_REPO}
      --username ${PYPI_USER} --password ${PYPI_PW}
      wheelhouse/*

test notebooks via wheel:
  stage: test
  needs: ["build wheels linux"]
  rules:
    - if: $CI_MERGE_REQUEST_LABELS =~ /.*ci::wheels only.*/
    - when: manual
  before_script:
    - cd Tests/Data
    - python3.10 -m venv --upgrade-deps .venv
    - source .venv/bin/activate
    - pip install -r requirements.txt
    - pip install --force-reinstall -r requirements-gmsh-nox.txt
    - pip install -r requirements-dev.txt
    - pip install ${CI_PROJECT_DIR}/wheelhouse/ogs-*-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl
