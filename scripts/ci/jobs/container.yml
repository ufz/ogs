# Built for Sandy Bridge (envinf1) and newer
container:
  stage: package
  tags: [envinf, shell]
  needs: [meta]
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
    - if: $CI_COMMIT_TAG
    - changes:
        - scripts/ci/jobs/container.yml
    - if: $CI_COMMIT_BRANCH =~ /^v[0-9]\.[0-9]\.[0-9]/
    - when: manual
      allow_failure: true
  extends:
    - .container-maker-setup
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - >
      if [[ "$CI_COMMIT_BRANCH" == "master" ]] ; then
        export DOCKER_TAG_SERIAL="--tag $CI_REGISTRY/ogs/$CI_PROJECT_NAME/ogs-serial:latest"
        export DOCKER_TAG_PETSC="--tag $CI_REGISTRY/ogs/$CI_PROJECT_NAME/ogs-petsc:latest"
        export DOCKER_TAG_JUPYTER="$CI_REGISTRY/ogs/$CI_PROJECT_NAME/ogs-serial-jupyter:latest"
        export DOCKER_TAG_JUPYTER_PETSC="$CI_REGISTRY/ogs/$CI_PROJECT_NAME/ogs-petsc-jupyter:latest"
        export ON_MASTER_ARGS="--upload -C"
      else
        export DOCKER_TAG_SERIAL="--tag ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-serial:latest"
        export DOCKER_TAG_PETSC="--tag ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-petsc:latest"
        export DOCKER_TAG_JUPYTER="ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-serial-jupyter:latest"
        export DOCKER_TAG_JUPYTER_PETSC="ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-petsc-jupyter:latest"
      fi
    # serial container
    - >
      poetry run ogscm compiler.py ogs.py -B -C -R --ogs ../..
      --build_args ' --progress=plain'
      --cvode --ccache --cpmcache --mfront --netcdf
      --cpu-target $CPU_TARGET
      --cmake_args ' -DOGS_BUILD_TESTING=OFF'
      --boost-sourceforge
      $DOCKER_TAG_SERIAL
      $ON_MASTER_ARGS
    # petsc container
    - >
      poetry run ogscm compiler.py mpi.py ogs.py -B -C -R --ogs ../..
      --build_args ' --progress=plain'
      --cvode --ccache --cpmcache --mfront --netcdf
      --cpu-target $CPU_TARGET
      --cmake_args ' -DOGS_BUILD_TESTING=OFF'
      --ompi 4.0.5 --mpi_benchmarks
      --boost-sourceforge
      $DOCKER_TAG_PETSC
      $ON_MASTER_ARGS
    # test ogs can run in container
    - |
      for sif in _out/images/*.sif; do
        singularity exec $sif ogs --version
      done
    # Data Explorer container
    # TODO: to enable -DOGS_BUILD_CLI=OFF the interface of ApplicationsLib
    #       needed by the Data Explorer needs to be decoupled from the Process
    #       stuff
    - >
      poetry run ogscm compiler.py ogs.py -B -C -R --ogs ../..
      --build_args ' --progress=plain'
      --cvode --ccache --cpmcache
      --cpu-target $CPU_TARGET
      --cmake_args ' -DOGS_BUILD_UTILS=OFF -DOGS_BUILD_TESTING=OFF'
      --gui
      --boost-sourceforge
    ### Jupyter container ###
    # Serial image
    - >
      poetry run ogscm compiler.py ogs.py ogs_jupyter.py -B -R --ogs ../..
      --build_args ' --progress=plain' --cvode --ccache --cpmcache --mfront --cpu-target $CPU_TARGET
      --cmake_args ' -DOGS_CPU_ARCHITECTURE=OFF -DOGS_BUILD_TESTING=OFF'
      --runtime_base_image 'registry.opengeosys.org/ogs/ogs/jupyter/base-notebook-ubuntu:23.04_3.10'
      --boost-sourceforge
      --tag $DOCKER_TAG_JUPYTER
      $ON_MASTER_ARGS
    # PETSc image
    - >
      poetry run ogscm compiler.py mpi.py ogs.py ogs_jupyter.py -B -R --ogs ../..
      --build_args ' --progress=plain' --cvode --ccache --cpmcache --mfront --cpu-target $CPU_TARGET
      --cmake_args ' -DOGS_CPU_ARCHITECTURE=OFF -DOGS_BUILD_TESTING=OFF'
      --runtime_base_image 'registry.opengeosys.org/ogs/ogs/jupyter/base-notebook-ubuntu:23.04_3.10'
      --mpi_no_entrypoint
      --boost-sourceforge
      --tag $DOCKER_TAG_JUPYTER_PETSC
      $ON_MASTER_ARGS
  artifacts:
    name: container
    paths:
      - ThirdParty/container-maker/_out/images/*.sif
    exclude:
      - ThirdParty/container-maker/_out/images/*jupyter*.sif

devcontainer:
  stage: package
  tags: [envinf, shell]
  needs: []
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      variables:
        MASTER_UPLOAD: "--upload --tag $CI_REGISTRY/ogs/$CI_PROJECT_NAME/vscode:latest"
    - if: $CI_COMMIT_TAG
    - changes:
        - scripts/ci/jobs/container.yml
        - .devcontainer.json
        - ThirdParty/container-maker
    - if: $CI_COMMIT_BRANCH =~ /^v[0-9]\.[0-9]\.[0-9]/
    - when: manual
      allow_failure: true
  extends:
    - .container-maker-setup
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    # VS Code dev container
    - >
      poetry run ogscm compiler.py ogs.py ogs_web.py ogs_vscode.py -B --ogs off
      --build_args ' --progress=plain'
      --cpu-target $CPU_TARGET
      --ccache --cpmcache
      ${MASTER_UPLOAD}
