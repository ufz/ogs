# Source files
# GET_SOURCE_FILES(SOURCES_FILEIO)
SET( SOURCES
	GMSInterface.h
	GMSInterface.cpp
	PetrelInterface.h
	PetrelInterface.cpp
	readMeshFromFile.h
	readMeshFromFile.cpp
	readNonBlankLineFromInputStream.h
	readNonBlankLineFromInputStream.cpp
	SHPInterface.h
	SHPInterface.cpp
	Writer.h
	Writer.cpp
)

GET_SOURCE_FILES(SOURCES_LEGACY Legacy)
GET_SOURCE_FILES(SOURCES_MESHIO MeshIO)
GET_SOURCE_FILES(SOURCES_RAPID_XML RapidXmlIO)
SET ( SOURCES ${SOURCES} ${SOURCES_LEGACY} ${SOURCES_MESHIO} ${SOURCES_RAPID_XML})

GET_SOURCE_FILES(SOURCES_BASE_XML XmlIO)
SET (SOURCES ${SOURCES} ${SOURCES_BASE_XML})
GET_SOURCE_FILES(SOURCES_BOOST_XML XmlIO/Boost)
SET (SOURCES ${SOURCES} ${SOURCES_BOOST_XML})
IF (QT4_FOUND)
	GET_SOURCE_FILES(SOURCES_QT_XML XmlIO/Qt)
	SET ( SOURCES ${SOURCES} ${SOURCES_QT_XML})
ENDIF (QT4_FOUND)

# Create the library
ADD_LIBRARY(FileIO STATIC ${SOURCES})

INCLUDE_DIRECTORIES(
	.
	${CMAKE_CURRENT_SOURCE_DIR}/../BaseLib
	${CMAKE_CURRENT_SOURCE_DIR}/../GeoLib
	${CMAKE_CURRENT_SOURCE_DIR}/../MathLib
	${CMAKE_CURRENT_SOURCE_DIR}/../MeshLib
	${CMAKE_CURRENT_SOURCE_DIR}/../OGS
	${CMAKE_CURRENT_BINARY_DIR}/../BaseLib
)

TARGET_LINK_LIBRARIES (FileIO
	GeoLib
	MeshLib
	zlib
	shp
)

FILE(GLOB XSD_FILES . *.xsd)
IF(APPLE)
	INSTALL(FILES ${XSD_FILES} DESTINATION ${CMAKE_BINARY_DIR}/_CPack_Packages/OSX/DragNDrop/${CPACK_PACKAGE_FILE_NAME}/ogs-gui.app/Contents/MacOS)
ELSE()
	INSTALL(FILES ${XSD_FILES} DESTINATION ${EXECUTABLE_OUTPUT_PATH})
ENDIF()
